// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	"github.com/aws/aws-sdk-go/aws"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
	_ = &aws.JSONValue{}
	_ = ackv1alpha1.AWSAccountID("")
)


// Information about a retention rule lock configuration.
type LockConfiguration struct {
	// Information about the retention rule unlock delay. The unlock delay is the
// period after which a retention rule can be modified or edited after it has
// been unlocked by a user with the required permissions. The retention rule
// can't be modified or deleted during the unlock delay.
	UnlockDelay *UnlockDelay `json:"unlockDelay,omitempty"`
}


// [Tag-level retention rules only] Information about the resource tags used
// to identify resources that are retained by the retention rule.
type ResourceTag struct {
	ResourceTagKey *string `json:"resourceTagKey,omitempty"`
	ResourceTagValue *string `json:"resourceTagValue,omitempty"`
}


// Information about the retention period for which the retention rule is to
// retain resources.
type RetentionPeriod struct {
	RetentionPeriodUnit *string `json:"retentionPeriodUnit,omitempty"`
	RetentionPeriodValue *int64 `json:"retentionPeriodValue,omitempty"`
}


// Information about a Recycle Bin retention rule.
type RuleSummary struct {
	Description *string `json:"description,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	LockState *string `json:"lockState,omitempty"`
	// Information about the retention period for which the retention rule is to
// retain resources.
	RetentionPeriod *RetentionPeriod `json:"retentionPeriod,omitempty"`
	RuleARN *string `json:"ruleARN,omitempty"`
}


// Information about the tags to assign to the retention rule.
type Tag struct {
	Key *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}


// Information about the retention rule unlock delay. The unlock delay is the
// period after which a retention rule can be modified or edited after it has
// been unlocked by a user with the required permissions. The retention rule
// can't be modified or deleted during the unlock delay.
type UnlockDelay struct {
	UnlockDelayUnit *string `json:"unlockDelayUnit,omitempty"`
	UnlockDelayValue *int64 `json:"unlockDelayValue,omitempty"`
}